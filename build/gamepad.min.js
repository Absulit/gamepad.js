var $=Object.defineProperty;var F=n=>{throw TypeError(n)};var k=(n,s,t)=>s in n?$(n,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[s]=t;var x=(n,s)=>$(n,"name",{value:s,configurable:!0});var N=(n,s,t)=>k(n,typeof s!="symbol"?s+"":s,t),U=(n,s,t)=>s.has(n)||F("Cannot "+t);var e=(n,s,t)=>(U(n,s,"read from private field"),t?t.call(n):s.get(n)),a=(n,s,t)=>s.has(n)?F("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(n):s.set(n,t),r=(n,s,t,i)=>(U(n,s,"write to private field"),i?i.call(n,t):s.set(n,t),t),W=(n,s,t)=>(U(n,s,"access private method"),t);var K={buttons:{RJB:0,INDEX:1,HAND:2,A:3,B:4,MENU:5},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},q={buttons:{LJB:0,INDEX:1,HAND:2,X:3,Y:4,MENU:5},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},J={buttons:{A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,VIEW:8,MENU:9,LJB:10,RJB:11,UP:12,DOWN:13,LEFT:14,RIGHT:15},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},z={buttons:{A:0,B:1,X:3,Y:2,LB:4,RB:5,VIEW:8,MENU:9,LJB:10,RJB:11,UP:12,DOWN:13,LEFT:14,RIGHT:15},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3},LT:4,RT:5}},Q={buttons:{SELECT:0,BACK:1,UP:2,DOWN:3,LEFT:4,RIGHT:5}},Z={"Microsoft Controller (STANDARD GAMEPAD Vendor: 045e Product: 02dd)":{mapping:J},"045e-02dd-Microsoft X-Box One pad (Firmware 2015)":{mapping:z},right:{mapping:K},left:{mapping:q},remote:{mapping:Q}};var j=Math.PI*2,T,C,L,m,A,b=class b extends EventTarget{constructor(t,i){super();a(this,T,!1);a(this,C,!0);a(this,L,null);a(this,m,null);a(this,A,!1);r(this,L,t),r(this,m,i)}get name(){return e(this,L)}get index(){return e(this,m)}set debug(t){r(this,A,t)}setProperties(t){for(let i in t)this[i]=t[i]}dispatchEventIfPushed(){if(this.touched&&!e(this,T)&&(this.dispatchEvent(new Event(b.PUSHED)),r(this,T,!0),r(this,C,!1),e(this,A))){let t=e(this,m);if(typeof e(this,m)=="object"){let{x:i,y:E}=e(this,m);t=`{x:${i}, y:${E}}`}console.log(`Button PUSHED: Name: ${e(this,L)}, Index: ${t}`)}!this.touched&&!e(this,C)&&(this.dispatchEvent(new Event(b.RELEASED)),r(this,T,!1),r(this,C,!0))}onPushed(t){this.addEventListener(b.PUSHED,t)}onReleased(t){this.addEventListener(b.RELEASED,t)}};T=new WeakMap,C=new WeakMap,L=new WeakMap,m=new WeakMap,A=new WeakMap,x(b,"Button"),N(b,"PUSHED","PUSHED"),N(b,"RELEASED","RELEASED");var R=b,u,M,P,V=class V extends EventTarget{constructor(t,i){super();a(this,u,null);a(this,M,null);a(this,P,{});r(this,u,t),r(this,M,i)}set gamepad(t){r(this,u,t)}get index(){return e(this,M)}get buttons(){return e(this,P)}vibrate(t,i){e(this,u).vibrates||(i||(i=1),e(this,u).vibrates=!0,e(this,u).vibrationActuator?.playEffect("dual-rumble",{startDelay:0,duration:t,weakMagnitude:.1,strongMagnitude:i}).then(()=>{e(this,u).vibrates=!1}))}get hasVibrationActuator(){return!!e(this,u).vibrationActuator}};u=new WeakMap,M=new WeakMap,P=new WeakMap,x(V,"Control");var y=V,I,D,l,f,O,w,B,Y,S,c=class c extends EventTarget{constructor(t){super();a(this,B);a(this,I,null);a(this,D,{});a(this,l,null);a(this,f,!1);a(this,O,x(t=>{let{gamepad:i}=t,{index:E,id:d}=i;e(this,f)&&(console.log("%cGamepadJS.CONNECTED","font-weight: bold; color: #ccc"),console.table({index:E,id:d,mapping:i.mapping}));let h=e(this,D)[`control${E}`]=new y(i,E);r(this,l,J),e(this,I)&&r(this,l,e(this,I)[i.id]?.mapping),console.log(i.mapping);for(let p in e(this,l).buttons)h.buttons[p]=new R(p,e(this,l).buttons[p]);for(let p in e(this,l).axes)h.buttons[p]=new R(p,e(this,l).axes[p]);this.dispatchEvent(new CustomEvent(c.CONNECTED,{detail:h}))},"#onGamepadConnected"));a(this,w,x(t=>{if(e(this,f)){let{gamepad:i}=t,{index:E,id:d}=i;console.log("%cGamepadJS.DISCONNECTED","font-weight: bold; color: #ccc"),console.table({index:E,id:d,mapping:i.mapping})}e(this,D)[`control${t.gamepad.index}`]=null,this.dispatchEvent(new Event(c.DISCONNECTED))},"#onGamepadDisconnected"));a(this,S,x(t=>typeof t=="object"&&t!==null,"#isObject"));N(this,"update",x(t=>{let i=W(this,B,Y).call(this);for(let E in e(this,D)){let d=e(this,D)[E],h=i[d?.index],p=e(this,l);if(!(!p||!h)){d.hasVibrationActuator||(d.gamepad=h),d.pose=h.pose;for(let v in p.buttons){let g=d.buttons[v],X=h.buttons[g.index];g.debug=e(this,f),g.setProperties(X),g.dispatchEventIfPushed()}for(let v in p.axes){let g=p.axes[v],X=e(this,S).call(this,g),o=d.buttons[v];if(X)o=d.buttons[v],o.debug=e(this,f),o.setProperties({x:h.axes[g.x],y:h.axes[g.y]}),o.touched=Math.abs(o.x)>.1||Math.abs(o.y)>.1,o.angle=Math.atan2(-o.y,o.x),o.proportion=o.angle/j,o.angle<0&&(o.angle+=j);else{let G=h.axes[g];o=d.buttons[v],o.debug=e(this,f),o.lastValue=o.value,o.value=G,o.touched=-.9<G,o.lastValue==o.value&&o.value==0&&(o.touched=!1)}o.dispatchEventIfPushed()}}}t(e(this,D))},"update"));if(c.instance)return c.instance;c.instance=this,r(this,I,t),window.addEventListener("gamepadconnected",e(this,O)),window.addEventListener("gamepaddisconnected",e(this,w))}onConnected(t){this.addEventListener(c.CONNECTED,t)}onDisconnected(t){this.addEventListener(c.DISCONNECTED,t)}set debug(t){r(this,f,t)}};I=new WeakMap,D=new WeakMap,l=new WeakMap,f=new WeakMap,O=new WeakMap,w=new WeakMap,B=new WeakSet,Y=x(function(){return navigator.getGamepads()},"#getGamepads"),S=new WeakMap,x(c,"GamepadJS"),N(c,"instance"),N(c,"CONNECTED","CONNECTED"),N(c,"DISCONNECTED","DISCONNECTED");var H=c;export{R as Button,y as Control,H as GamepadJS,Z as gamepadInfo};
