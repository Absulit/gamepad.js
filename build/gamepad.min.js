var H=Object.defineProperty;var G=n=>{throw TypeError(n)};var W=(n,e,t)=>e in n?H(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var u=(n,e)=>H(n,"name",{value:e,configurable:!0});var b=(n,e,t)=>W(n,typeof e!="symbol"?e+"":e,t),X=(n,e,t)=>e.has(n)||G("Cannot "+t);var s=(n,e,t)=>(X(n,e,"read from private field"),t?t.call(n):e.get(n)),i=(n,e,t)=>e.has(n)?G("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(n):e.set(n,t),d=(n,e,t,a)=>(X(n,e,"write to private field"),a?a.call(n,t):e.set(n,t),t),F=(n,e,t)=>(X(n,e,"access private method"),t);var j={buttons:{RJB:0,INDEX:1,HAND:2,A:3,B:4,MENU:5},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},Y={buttons:{LJB:0,INDEX:1,HAND:2,X:3,Y:4,MENU:5},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},w={buttons:{A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,VIEW:8,MENU:9,LJB:10,RJB:11,UP:12,DOWN:13,LEFT:14,RIGHT:15},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},k={buttons:{A:0,B:1,X:3,Y:2,LB:4,RB:5,VIEW:8,MENU:9,LJB:10,RJB:11,UP:12,DOWN:13,LEFT:14,RIGHT:15},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3},LT:4,RT:5}},$={buttons:{SELECT:0,BACK:1,UP:2,DOWN:3,LEFT:4,RIGHT:5}},K={"Microsoft Controller (STANDARD GAMEPAD Vendor: 045e Product: 02dd)":{mapping:w},"045e-02dd-Microsoft X-Box One pad (Firmware 2015)":{mapping:k},right:{mapping:j},left:{mapping:Y},remote:{mapping:$}};var D,N,I,h=class h extends EventTarget{constructor(t){super();i(this,D,!1);i(this,N,!0);i(this,I,null);d(this,I,t)}setProperties(t){for(let a in t)this[a]=t[a]}dispatchEventIfPushed(){this.touched&&!s(this,D)&&(this.dispatchEvent(new Event(h.PUSHED)),d(this,D,!0),d(this,N,!1)),!this.touched&&!s(this,N)&&(this.dispatchEvent(new Event(h.RELEASED)),d(this,D,!1),d(this,N,!0))}onPushed(t){this.addEventListener(h.PUSHED,t)}onReleased(t){this.addEventListener(h.RELEASED,t)}};D=new WeakMap,N=new WeakMap,I=new WeakMap,u(h,"Button"),b(h,"PUSHED","PUSHED"),b(h,"RELEASED","RELEASED");var C=h,E,T,P,J=class J extends EventTarget{constructor(t,a){super();i(this,E,null);i(this,T,null);i(this,P,{});d(this,E,t),d(this,T,a)}set gamepad(t){d(this,E,t)}get index(){return s(this,T)}get buttons(){return s(this,P)}vibrate(t,a){s(this,E).vibrates||(a||(a=1),s(this,E).vibrates=!0,s(this,E).vibrationActuator?.playEffect("dual-rumble",{startDelay:0,duration:t,weakMagnitude:.1,strongMagnitude:a}).then(()=>{s(this,E).vibrates=!1}))}};E=new WeakMap,T=new WeakMap,P=new WeakMap,u(J,"Control");var M=J,v,x,g,y,A,B,V,O,r=class r extends EventTarget{constructor(t){super();i(this,B);i(this,v,null);i(this,x,{});i(this,g,null);i(this,y,u(t=>{let{gamepad:a}=t,{index:L,id:l}=a;console.log("---- #onGamepadConnected",L,l),console.log("---- #onGamepadConnected",a.constructor.name);let p=s(this,x)[`control${L}`]=new M(a,L);d(this,g,w),s(this,v)&&d(this,g,s(this,v)[a.id]?.mapping);for(let c in s(this,g).buttons)p.buttons[c]=new C(c);for(let c in s(this,g).axes)p.buttons[c]=new C(c);this.dispatchEvent(new CustomEvent(r.CONNECTED,{detail:p}))},"#onGamepadConnected"));i(this,A,u(t=>{console.log("---- #onGamepadDisconnected",t.gamepad.index,t.gamepad.id),s(this,x)[`control${t.gamepad.index}`]=null,this.dispatchEvent(new Event(r.DISCONNECTED))},"#onGamepadDisconnected"));i(this,O,u(t=>typeof t=="object"&&t!==null,"#isObject"));b(this,"update",u(t=>{let a=F(this,B,V).call(this);for(let L in s(this,x)){let l=s(this,x)[L],p=a[l?.index],c=s(this,g);if(!c)return;l.pose=p.pose;for(let m in c.buttons){let f=p.buttons[c.buttons[m]],R=l.buttons[m];R.setProperties(f),R.dispatchEventIfPushed()}for(let m in c.axes){let f=c.axes[m],R=s(this,O).call(this,f),o=l.buttons[m];if(R)o=l.buttons[m],o.setProperties({x:p.axes[f.x],y:p.axes[f.y]}),o.touched=Math.abs(o.x)>.1||Math.abs(o.y)>.1,o.angle=Math.atan2(o.y,o.x);else{let S=p.axes[f];o=l.buttons[m],o.lastValue=o.value,o.value=S,o.touched=-.9<S,o.lastValue==o.value&&o.value==0&&(o.touched=!1)}o.dispatchEventIfPushed()}}t(s(this,x))},"update"));if(r.instance)return r.instance;r.instance=this,d(this,v,t),window.addEventListener("gamepadconnected",s(this,y)),window.addEventListener("gamepaddisconnected",s(this,A))}onConnected(t){this.addEventListener(r.CONNECTED,t)}onDisconnected(t){this.addEventListener(r.DISCONNECTED,t)}};v=new WeakMap,x=new WeakMap,g=new WeakMap,y=new WeakMap,A=new WeakMap,B=new WeakSet,V=u(function(){return navigator.getGamepads()},"#getGamepads"),O=new WeakMap,u(r,"GamepadJS"),b(r,"instance"),b(r,"CONNECTED","CONNECTED"),b(r,"DISCONNECTED","DISCONNECTED");var U=r;export{C as Button,M as Control,U as GamepadJS,K as gamepadInfo};
