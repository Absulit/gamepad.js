var F=Object.defineProperty;var W=o=>{throw TypeError(o)};var q=(o,n,t)=>n in o?F(o,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):o[n]=t;var u=(o,n)=>F(o,"name",{value:n,configurable:!0});var N=(o,n,t)=>q(o,typeof n!="symbol"?n+"":n,t),J=(o,n,t)=>n.has(o)||W("Cannot "+t);var e=(o,n,t)=>(J(o,n,"read from private field"),t?t.call(o):n.get(o)),a=(o,n,t)=>n.has(o)?W("Cannot add the same private member more than once"):n instanceof WeakSet?n.add(o):n.set(o,t),r=(o,n,t,s)=>(J(o,n,"write to private field"),s?s.call(o,t):n.set(o,t),t),j=(o,n,t)=>(J(o,n,"access private method"),t);var K={buttons:{RJB:0,INDEX:1,HAND:2,A:3,B:4,MENU:5},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},z={buttons:{LJB:0,INDEX:1,HAND:2,X:3,Y:4,MENU:5},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},H={buttons:{A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,VIEW:8,MENU:9,LJB:10,RJB:11,UP:12,DOWN:13,LEFT:14,RIGHT:15},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3}}},Q={buttons:{A:0,B:1,X:3,Y:2,LB:4,RB:5,VIEW:8,MENU:9,LJB:10,RJB:11,UP:12,DOWN:13,LEFT:14,RIGHT:15},axes:{LJX:{x:0,y:1},RJX:{x:2,y:3},LT:4,RT:5}},Z={buttons:{SELECT:0,BACK:1,UP:2,DOWN:3,LEFT:4,RIGHT:5}},_={"Microsoft Controller (STANDARD GAMEPAD Vendor: 045e Product: 02dd)":{mapping:H},"045e-02dd-Microsoft X-Box One pad (Firmware 2015)":{mapping:Q},right:{mapping:K},left:{mapping:z},remote:{mapping:Z}};var Y=Math.PI*2,T,C,L,m,M,b=class b extends EventTarget{constructor(t,s){super();a(this,T,!1);a(this,C,!0);a(this,L,null);a(this,m,null);a(this,M,!1);r(this,L,t),r(this,m,s)}get name(){return e(this,L)}get index(){return e(this,m)}set debug(t){r(this,M,t)}setProperties(t){for(let s in t)this[s]=t[s]}dispatchEventIfPushed(){if(this.touched&&!e(this,T)&&(this.dispatchEvent(new Event(b.PUSHED)),r(this,T,!0),r(this,C,!1),e(this,M))){let t=e(this,m);if(typeof e(this,m)=="object"){let{x:s,y:g}=e(this,m);t=`{x:${s}, y:${g}}`}console.log(`Button PUSHED: Name: ${e(this,L)}, Index: ${t}`)}!this.touched&&!e(this,C)&&(this.dispatchEvent(new Event(b.RELEASED)),r(this,T,!1),r(this,C,!0))}onPushed(t){this.addEventListener(b.PUSHED,t)}onReleased(t){this.addEventListener(b.RELEASED,t)}};T=new WeakMap,C=new WeakMap,L=new WeakMap,m=new WeakMap,M=new WeakMap,u(b,"Button"),N(b,"PUSHED","PUSHED"),N(b,"RELEASED","RELEASED");var y=b,l,R,A,G=class G extends EventTarget{constructor(t,s){super();a(this,l,null);a(this,R,null);a(this,A,{});r(this,l,t),r(this,R,s)}set gamepad(t){r(this,l,t)}get index(){return e(this,R)}get buttons(){return e(this,A)}vibrate(t,s){e(this,l).vibrates||(s||(s=1),e(this,l).vibrates=!0,e(this,l).vibrationActuator?.playEffect("dual-rumble",{startDelay:0,duration:t,weakMagnitude:.1,strongMagnitude:s}).then(()=>{e(this,l).vibrates=!1}))}addButton(t,s){e(this,A)[t]=new y(t,s)}get hasVibrationActuator(){return!!e(this,l).vibrationActuator}};l=new WeakMap,R=new WeakMap,A=new WeakMap,u(G,"Control");var B=G,I,D,E,f,P,O,w,k,S,X,d=class d extends EventTarget{constructor(t){super();a(this,w);a(this,I,null);a(this,D,{});a(this,E,null);a(this,f,!1);a(this,P,u(t=>{let{gamepad:s}=t,{index:g,id:c}=s;e(this,f)&&(console.log("%cGamepadJS.CONNECTED","font-weight: bold; color: #ccc"),console.table({index:g,id:c,mapping:s.mapping}));let h=e(this,D)[`control${g}`]=new B(s,g);r(this,E,H),e(this,I)&&r(this,E,e(this,I)[s.id]?.mapping),console.log(s.mapping);for(let p in e(this,E).buttons)h.addButton(p,e(this,E).buttons[p]);for(let p in e(this,E).axes)h.addButton(p,e(this,E).axes[p]);this.dispatchEvent(new CustomEvent(d.CONNECTED,{detail:h}))},"#onGamepadConnected"));a(this,O,u(t=>{if(e(this,f)){let{gamepad:s}=t,{index:g,id:c}=s;console.log("%cGamepadJS.DISCONNECTED","font-weight: bold; color: #ccc"),console.table({index:g,id:c,mapping:s.mapping})}e(this,D)[`control${t.gamepad.index}`]=null,this.dispatchEvent(new Event(d.DISCONNECTED))},"#onGamepadDisconnected"));a(this,S,u(t=>typeof t=="object"&&t!==null,"#isObject"));a(this,X,u((t,s)=>Math.sqrt(t*t+s*s),"#distance"));N(this,"update",u(t=>{let s=j(this,w,k).call(this);for(let g in e(this,D)){let c=e(this,D)[g],h=s[c?.index],p=e(this,E);if(!(!p||!h)){c.hasVibrationActuator||(c.gamepad=h),c.pose=h.pose;for(let v in p.buttons){let x=c.buttons[v],U=h.buttons[x.index];x.debug=e(this,f),x.setProperties(U),x.dispatchEventIfPushed()}for(let v in p.axes){let x=p.axes[v],U=e(this,S).call(this,x),i=c.buttons[v];if(U)i=c.buttons[v],i.debug=e(this,f),i.setProperties({x:h.axes[x.x],y:h.axes[x.y]}),i.touched=Math.abs(i.x)>.1||Math.abs(i.y)>.1,i.angle=Math.atan2(-i.y,i.x),i.proportion=i.angle/Y,i.angle<0&&(i.angle+=Y),i.distance=e(this,X).call(this,i.x,i.y);else{let $=h.axes[x];i=c.buttons[v],i.debug=e(this,f),i.lastValue=i.value,i.value=$,i.touched=-.9<$,i.lastValue==i.value&&i.value==0&&(i.touched=!1)}i.dispatchEventIfPushed()}}}t(e(this,D))},"update"));if(d.instance)return d.instance;d.instance=this,r(this,I,t),window.addEventListener("gamepadconnected",e(this,P)),window.addEventListener("gamepaddisconnected",e(this,O))}onConnected(t){this.addEventListener(d.CONNECTED,t)}onDisconnected(t){this.addEventListener(d.DISCONNECTED,t)}set debug(t){r(this,f,t)}};I=new WeakMap,D=new WeakMap,E=new WeakMap,f=new WeakMap,P=new WeakMap,O=new WeakMap,w=new WeakSet,k=u(function(){return navigator.getGamepads()},"#getGamepads"),S=new WeakMap,X=new WeakMap,u(d,"GamepadJS"),N(d,"instance"),N(d,"CONNECTED","CONNECTED"),N(d,"DISCONNECTED","DISCONNECTED");var V=d;export{y as Button,B as Control,V as GamepadJS,_ as gamepadInfo};
